{"version":3,"file":"static/js/694.356ffc51.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","servises/search_Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Movies_list__JEO-P\",\"title\":\"Movies_title__EqSqF\",\"link\":\"Movies_link__0oDWE\",\"date\":\"Movies_date__J5cmT\",\"rating\":\"Movies_rating__Q48wB\"};","import { Link } from 'react-router-dom';\nimport css from './Movies.module.css'\n\nconst Movies = ({ movies }) => {\n  const PICTURE_URL = 'https://image.tmdb.org/t/p/';\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  return (\n    <ul className={css.list}>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} className={css.link}>\n            <div>\n            <img\n              src={`${PICTURE_URL}w200${movie.poster_path}`}\n              alt={movie.title}\n            />\n            </div>\n            <h2 className={css.title}>{movie.title}</h2>\n            <p className={css.date}>\n              {new Date(movie.release_date).toLocaleDateString(\n                'en-US',\n                dateOptions\n              )}\n            </p>\n            <p className={css.rating}>    \n              {movie.vote_average === 0\n                ? 'NR'\n                : `${Math.round(movie.vote_average * 10)}%`}\n            </p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n\n\nexport default Movies","// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__UDDYf\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loaderContainer}>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\n","import { Fragment, Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams,  Link, NavLink } from 'react-router-dom';\nimport { searchTrendingMovies } from '../../servises/search_Api';\nimport { Loader } from '../../components/Loader/Loader';\nimport Movies from '../../components/Movies/Movies';\n\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(0);\n  const [error, setError] = useState('');\n  const { state } = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    searchTrendingMovies('movieById', Number(movieId))\n      .then(results => {\n        setMovieData(results);\n        setError('');\n      })\n      .catch(error => {\n        setError(\n            \"I'm sorry, but something went wrong... Please, try again later\"\n        );\n        setTimeout(() => {\n          navigate('/');\n        }, 1000);\n      });\n  }, [movieId, navigate]);\n\n  return (\n    <Fragment>\n      <Link to={state?.from ?? '/'}>Go back</Link>\n\n      {error === '' && movieData ? (\n        <>\n          <Movies movieData={movieData} />\n\n          <div>\n            <h2>Additional information: </h2>\n            <ul>\n              <li>\n                <NavLink to=\"cast\" state={{ from: state?.from }}>\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"reviews\" state={{ from: state?.from }}>\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <p>{error}</p>\n      )}\n    </Fragment>\n  );\n};\n\nexport default MovieDetailsPage;","import axios from 'axios';\n\nexport async function searchTrendingMovies() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const searchParams = new URLSearchParams({\n    api_key: '6b2f249c49a040541fc751a7fb9d7fc1',\n  });\n\n  const response = await axios.get(`${BASE_URL}?${searchParams}`);\n  return response.data;\n}\n\nexport async function searchMovieById(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const searchParams = new URLSearchParams({\n    api_key: '6b2f249c49a040541fc751a7fb9d7fc1',\n  });\n\n  const response = await axios.get(`${BASE_URL}/${id}?${searchParams}`);\n  return response.data;\n}\n"],"names":["_ref","movies","dateOptions","year","month","day","_jsx","className","css","children","map","movie","_jsxs","Link","to","concat","id","src","poster_path","alt","title","Date","release_date","toLocaleDateString","vote_average","Math","round","Loader","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","_state$from","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","_useState3","_useState4","error","setError","state","useLocation","navigate","useNavigate","useEffect","searchTrendingMovies","Number","then","results","catch","setTimeout","Fragment","from","_Fragment","Movies","NavLink","Suspense","fallback","Outlet","_searchTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","searchParams","response","_context","prev","next","URLSearchParams","api_key","axios","sent","abrupt","data","stop"],"sourceRoot":""}