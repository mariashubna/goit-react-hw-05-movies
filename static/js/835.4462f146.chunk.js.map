{"version":3,"file":"static/js/835.4462f146.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/MoviesPage/MoviesPage.jsx","servises/search_Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Movies_list__JEO-P\",\"title\":\"Movies_title__EqSqF\",\"link\":\"Movies_link__0oDWE\",\"date\":\"Movies_date__J5cmT\",\"rating\":\"Movies_rating__Q48wB\",\"poster\":\"Movies_poster__HRZqO\"};","import { Link } from 'react-router-dom';\nimport css from './Movies.module.css'\n\nconst Movies = ({ movies }) => {\n  const PICTURE_URL = 'https://image.tmdb.org/t/p/';\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  return (\n    <ul className={css.list}>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} className={css.link}>\n            <div>\n            <img className={css.poster}\n              src={\n                movie.poster_path\n                ? `${PICTURE_URL}w200${movie.poster_path}`\n                : 'https://img.freepik.com/premium-vector/iphone-mobile-wallpaper-abstract-background-design-background_684242-38.jpg'\n              }\n              alt={movie.title}\n            />\n            </div>\n            <h2 className={css.title}>{movie.title}</h2>\n            <p className={css.date}>\n              {new Date(movie.release_date).toLocaleDateString(\n                'en-US',\n                dateOptions\n              )}\n            </p>\n            <p className={css.rating}>    \n              {movie.vote_average === 0\n                ? 'NR'\n                : `${Math.round(movie.vote_average * 10)}%`}\n            </p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n\n\nexport default Movies","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"btn\":\"SearchBar_btn__PKGSc\"};","import { Formik, Field, Form } from 'formik';\nimport { BsSearch } from 'react-icons/bs';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport css from './SearchBar.module.css'\n\nexport const SearchBar = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    if (!value) setSearchParams({});\n    setQuery(value);\n  };\n\n  const handleSearch = () => {\n    if (query === '') {\n      setError('Please enter your search query');\n      return;\n    }\n\n    setSearchParams({ query: query });\n    setError('');\n  };\n\n  useEffect(() => {\n    const value = searchParams.get('query');\n    if (value) {\n      setQuery(value);\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <Formik initialValues={{ searchQuery: '' }} onSubmit={handleSearch} >\n        <Form className={css.form}>\n          <Field\n            value={query}\n            name=\"searchQuery\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n            onChange={handleChange}\n          />\n\n          <button type=\"submit\" className={css.btn}>\n            <BsSearch />\n            <p>Search</p>\n          </button>\n        </Form>\n      </Formik>\n\n      {error === '' ? '' : <div>{error}</div>}\n    </>\n  );\n};","import Movies from '../../components/Movies/Movies';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesByQuery } from '../../servises/search_Api'; \n\nconst MoviesPage = () => {\n  const [searchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) return;\n\n    searchMoviesByQuery(query)\n      .then((results) => {\n        if (!results.length) {\n          setError(`Sorry, I found no movies mentioning ${query.toUpperCase()}. Try again`);\n          return;\n        }\n        setMovies(results);\n        setError('');\n      })\n      .catch(() => setError(\"I'm sorry, but something went wrong... Please, try again later\"));\n  }, [searchParams]);\n\n  return (\n    <div>\n      <SearchBar />\n      {error === '' ? <Movies movies={movies} /> : <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n\n\n// const MoviesPage = () => {\n//   const [searchParams] = useSearchParams();\n//   const [movies, setMovies] = useState([]);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const query = searchParams.get('query');\n//     if (!query) return;\n\n//     searchTrendingMovies('searchByQuery', 0, query)\n//       .then(({ results }) => {\n//         if (!results.length) {\n//           setError(\n//             `Sorry, I found no movies, mentioning ${query.toUpperCase()}. Try again`\n//           );\n//           return;\n//         }\n//         setMovies(results);\n//         setError('');\n//       })\n//       .catch(() =>\n//         setError(\n//             \"I'm sorry, but something went wrong... Please, try again later\"\n//         )\n//       );\n//   }, [searchParams]);\n\n//   return (\n//     <div>\n//       <SearchBar />\n//       {error === '' ? <Movies movies={movies} /> : <p>{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default MoviesPage;","import axios from 'axios';\n\nconst API_KEY = '6b2f249c49a040541fc751a7fb9d7fc1';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function searchTrendingMovies() {\n  const endpoint = '/trending/movie/day';\n  const response = await axios.get(`${BASE_URL}${endpoint}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function searchMovieById(id) {\n  const endpoint = `/movie/${id}`;\n  const response = await axios.get(`${BASE_URL}${endpoint}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function searchMoviesByQuery(query) {\n  const endpoint = '/search/movie';\n  try {\n    const response = await axios.get(`${BASE_URL}${endpoint}?api_key=${API_KEY}&query=${query}`);\n    return response.data.results;\n  } catch (error) {\n    throw new Error(\"I'm sorry, but something went wrong... Please, try again later\");\n  }\n}\n\nexport async function getMovieCredits(id) {\n  const endpoint = `/movie/${id}/credits`;\n  const response = await axios.get(`${BASE_URL}${endpoint}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const endpoint = `/movie/${id}/reviews`;\n  const response = await axios.get(`${BASE_URL}${endpoint}?api_key=${API_KEY}`);\n  return response.data;\n}"],"names":["_ref","movies","dateOptions","year","month","day","_jsx","className","css","children","map","movie","_jsxs","Link","to","concat","id","src","poster_path","alt","title","Date","release_date","toLocaleDateString","vote_average","Math","round","SearchBar","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","error","setError","useEffect","value","get","_Fragment","Formik","initialValues","searchQuery","onSubmit","Form","Field","name","type","autoComplete","autoFocus","placeholder","onChange","target","BsSearch","setMovies","searchMoviesByQuery","then","results","length","toUpperCase","catch","Movies","API_KEY","BASE_URL","searchTrendingMovies","_searchTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","abrupt","data","stop","_x2","_searchMoviesByQuery","_callee3","_context3","t0","Error","getMovieCredits","_x3","_getMovieCredits","_callee4","endpoint","_context4"],"sourceRoot":""}